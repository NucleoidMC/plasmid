plugins {
  id 'fabric-loom' version '0.12-SNAPSHOT'
  id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

sourceSets {
  testmod {
    runtimeClasspath += main.runtimeClasspath
    compileClasspath += main.compileClasspath
  }
}

loom {
  runs {
    testmodClient {
      client()
      ideConfigGenerated project.rootProject == project
      name = "Test Mod Client"
      source sourceSets.testmod
    }
    testmodServer {
      server()
      ideConfigGenerated project.rootProject == project
      name = "Test Mod Server"
      source sourceSets.testmod
    }
  }

  accessWidenerPath = file("src/main/resources/plasmid.accesswidener")
  runtimeOnlyLog4j = true
}

def env = System.getenv()

version = "${project.mod_version}+${project.minecraft_version}"

if (!env.GITHUB_ACTIONS) {
  version += "-local"
}

if (project.snapshot) {
  version += "-SNAPSHOT"
}

repositories {
  maven { url = "https://maven.nucleoid.xyz/" }
  maven { url = "https://maven.gegy.dev/" }
  maven { url = "https://api.modrinth.com/maven/" }
}


dependencies {
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
  modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

  modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

  modImplementation include('fr.catcore:server-translations-api:1.4.16+1.19')
  modImplementation include('xyz.nucleoid:packet-tweaker:0.3.0+1.18.2')
  modImplementation include('xyz.nucleoid:fantasy:0.4.5+1.19')
  modImplementation include('xyz.nucleoid:more-codecs:0.2.2+1.18')
  modImplementation include('xyz.nucleoid:stimuli:0.4.1+1.19.1')
  modImplementation include('xyz.nucleoid:map-templates:0.1.5+1.19')
  modImplementation include('eu.pb4:polymer:0.2.10+1.19.1')
  modImplementation include('eu.pb4:polymer-blocks:0.1.0-alpha.8+1.19.1')
  modImplementation include('eu.pb4:hologram-api:0.2.2+1.19')
  modImplementation include('eu.pb4:sgui:1.1.3+1.19.1')
  modImplementation include('eu.pb4:sidebar-api:0.1.1+1.19')
  modImplementation include("eu.pb4:placeholder-api:2.0.0-beta.7+1.19")
  modImplementation include("eu.pb4:map-canvas-api:0.1.4+1.19")

  modCompileOnly('xyz.nucleoid:disguiselib-fabric:1.3.1')
  modCompileOnly('maven.modrinth:afkdisplay:1.0.1+1.19')

  testmodImplementation sourceSets.main.output
}

processResources {
  inputs.property "version", project.version

  filesMatching("fabric.mod.json") {
    expand "version": project.version
  }
}

tasks.withType(JavaCompile).configureEach {
  it.options.encoding = "UTF-8"
  it.options.release = 17
}

java {
  withSourcesJar()
}

jar {
  from("LICENSE") {
    rename { "${it}_${project.archivesBaseName}"}
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact(remapJar) {
        builtBy remapJar
      }
      artifact(sourcesJar) {
        builtBy remapSourcesJar
      }
    }
  }

  repositories {
    if (env.MAVEN_URL) {
      maven {
        credentials {
          username env.MAVEN_USERNAME
          password env.MAVEN_PASSWORD
        }
        url env.MAVEN_URL
      }
    } else {
      mavenLocal()
    }
  }
}
